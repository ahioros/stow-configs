format = """
[░▒▓](#a3aed2)\
[  ](bg:#a3aed2 fg:#090c0c)\
[](bg:#769ff0 fg:#a3aed2)\
$directory\
[](fg:#769ff0 bg:#394260)\
${custom.giturl}\
$git_branch\
$git_status\
[](fg:#394260 bg:#212736)\
$python\
$pulumi\
$golang\
$c\
$perl\
$lua\
$nodejs\
$haskell\
$rust\
$ruby\
$dotnet\
$package\
$aws\
$azure\
$gcloud\
$helm\
${custom.dockerfiles}\
$docker_context\
${custom.kubernetes}\
${custom.kubernetes_yml}\
${custom.shellfiles}\
${custom.ansible}\
$terraform\
$container\
$shell\
$memory_usage\
$sudo\
$status\
$battery\
[](fg:#212736 bg:#1d2230)\
${custom.live-clock-icon}\
$time\
$os\
$localip\
$cmd_duration\
$jobs\
[ ](fg:#1d2230)\
\n$character"""

# Add a new line before the prompt
# $line_break\

# Add new line after prompt
add_newline = false

# Use the color palette
palette = "catppuccin_frappe"

# Define Dracula color palette
[palettes.dracula]
background = "#282a36"
current_line = "#44475a"
foreground = "#f8f8f2"
comment = "#6272a4"
cyan = "#8be9fd"
green = "#50fa7b"
orange = "#ffb86c"
pink = "#ff79c6"
purple = "#bd93f9"
red = "#ff5555"
yellow = "#f1fa8c"

[palettes.catppuccin_frappe]
rosewater = "#f2d5cf"
flamingo = "#eebebe"
pink = "#f4b8e4"
mauve = "#ca9ee6"
red = "#e78284"
maroon = "#ea999c"
peach = "#ef9f76"
yellow = "#e5c890"
green = "#a6d189"
teal = "#81c8be"
sky = "#99d1db"
sapphire = "#85c1dc"
blue = "#8caaee"
lavender = "#babbf1"
text = "#c6d0f5"
subtext1 = "#b5bfe2"
subtext0 = "#a5adce"
overlay2 = "#949cbb"
overlay1 = "#838ba7"
overlay0 = "#737994"
surface2 = "#626880"
surface1 = "#51576d"
surface0 = "#414559"
base = "#303446"
mantle = "#292c3c"
crust = "#232634"
orange = "#ffb86c"

[fill]
symbol = "-"
style = "bold #44475a"

[python]
style ="bg:#212736"
symbol = " 🐍 "
format = '[[${symbol}${pyenv_prefix}("${version} )(\($virtualenv\) )](fg:#769ff0 bg:#212736)]($style)'
pyenv_version_name = true
pyenv_prefix = "venv "
detect_extensions = ["py"]

[aws]
symbol = "   "
style = "bg:#212736"
format = '[[$symbol($profile )(\[$duration\] )](fg:#769ff0 bg:#212736)]($style)'
disabled = false

[azure]
symbol = " 󰠅 "
style = "bg:#212736"
format = '[[$symbol($subscription )](fg:#769ff0 bg:#212736)]($style)'
disabled = false

[gcloud]
symbol = ' 󱇶 '
style = "bg:#212736"
format = '[[$symbol$account(@$domain)(\($region\))](fg:#769ff0 bg:#212736)]($style)'
disabled = false

[lua]
symbol = '  '
style = "bg:#212736"
format = '[[via $symbol](fg:#769ff0 bg:#212736)]($style)'

[nodejs]
style = "bg:#212736"
symbol = '  '
format = '[[via $symbol](fg:#769ff0 bg:#212736)]($style)'

[golang]
style = "bg:#212736"
symbol = '  '
format = '[[via $symbol](fg:#769ff0 bg:#212736)]($style)'

[haskell]
style = "bg:#212736"
symbol = '  '
format = '[[via $symbol](fg:#769ff0 bg:#212736)]($style)'

[rust]
style = "bg:#212736"
symbol = '  '
format = '[[via $symbol](fg:#769ff0 bg:#212736)]($style)'

[ruby]
style = "bg:#212736"
symbol = '  '
format = '[[via $symbol](fg:#769ff0 bg:#212736)]($style)'

[package]
symbol = ' 󰏗 '
style = "bg:#212736"
format = '[[via $symbol](fg:#769ff0 bg:#212736)]($style)'

[docker_context]
symbol = "  "
format = '[[via $symbol$context](fg:#769ff0 bg:#212736)]($style)'
style = "bg:#212736"
detect_folders = []
detect_files = ['docker-compose.yml', 'docker-compose.yaml', 'Dockerfile']
detect_extensions = ['yml', 'yaml']
only_with_files = true
disabled = false

[battery]
full_symbol = "🔋"
charging_symbol = " 󰂄 "
discharging_symbol = " 󰂍 "
empty_symbol = "🪫"
unknown_symbol = " 󰂑 "
disabled = false
format = '[[$symbol$percentage](fg:#769ff0 bg:#212736)]($style)'

[[battery.display]]
threshold = 90

#[character]
#error_symbol = "[󰣇](bold #ff5555)"
#success_symbol = "[󰣇](bold #f8f8f2)"

[cmd_duration]
style = "bg:#1d2230"
min_time = 500
format = '[[$duration](fg:#a0a9cb bg:#1d2230)]($style)'

[jobs]
symbol = '   '
style = "bg:#1d2230"
number_threshold = 1
format = '[[$symbol$number](fg:#a0a9cb bg:#1d2230)]($style)'

[directory]
read_only = "  "
style = "fg:#e3e5e5 bg:#769ff0"
format = "[$path ]($style)"
truncation_length = 2
truncation_symbol = "'…/"
truncate_to_repo = false

[directory.substitutions]
'Documents' = ' '
'Downloads' = ' '
'Music' = ' '
'Pictures' = ' '
'Videos' = ' '
'Desktop' = '  '
'Templates' = ' '
'Games' ='󱎓 '
'Virtual Machines' = '󰒋 '
'Books' = ' '
'Canal-Youtube' = ' '

[git_branch]
symbol = " "
style = "bg:#394260"
format =  '[[ $symbol $branch ](fg:#769ff0 bg:#394260)]($style)'

[git_status]
up_to_date = ' ✅ '
conflicted = ' 🏳 '
ahead = ' ⏩${count} '
behind = ' 🐌${count} '
untracked = '🤷 '
stashed = ' 📦 '
modified = ' 📝 '
renamed = ' 👅 '
deleted = ' 🗑 '
style = "bg:#394260"
format = '[[($all_status$ahead_behind )](fg:#769ff0 bg:#394260)]($style)'

[hostname]
style = "white"

[username]
format = "[$user]($style) on "
style_user = "bold #bd93f9"

[memory_usage]
format = '[[via $symbol $ram](fg:#769ff0 bg:#212736)]($style)'
disabled = false
threshold = 75
symbol = '   '
style =  "bg:#212736"

[localip]
ssh_only = true
format = '@[[$localipv4](fg:#a0a9cb bg:#1d2230)]($style)'
disabled = false
style = "bg:#1d2230"

#[os]
#format = "on [($symbol )]($style)"
#style = "bold #f8f8f2"
#disabled = false

[os.symbols]
Windows = " "
Arch = " "
Gentoo = " "
Ubuntu = " "
Debian = " "
Macos = " "
Fedora = " "
Linux = " "
OpenBSD = " "
FreeBSD = " "
Android = " "
NetBSD = " "
openSUSE = " "
Redhat = " "
Amazon = " "
AIX = " "
Unknown = " "

[status]
disabled = false
style =  "bg:#212736"
format = '[\[$symbol$common_meaning$signal_name$maybe_int\](fg:#769ff0 bg:#212736)]($style)'
symbol = '❌'
not_executable_symbol = '🚫'
not_found_symbol = '🔍'
signal_symbol = '⚡'
sigint_symbol = '🧱'
recognize_signal_code = true
map_symbol = true

[pulumi]
format = '[[🛥($version)$stack](fg:#769ff0 bg:#212736)]($style)'
disabled = false
style = "bg:#212736"

[c]
symbol = "  "
style = "bg:#212736"
format = '[[via $symbol](fg:#769ff0 bg:#212736)]($style)'

[perl]
symbol = "  "
style = "bg:#212736"
format = '[[via $symbol](fg:#769ff0 bg:#212736)]($style)'

[dotnet]
style = "bg:#212736"
format = '[[via $symbol](fg:#769ff0 bg:#212736)]($style)'
symbol = " 󰪮  "
detect_extensions = ["csproj", "fsproj", "xproj"]
detect_files = ['global.json', 'project.json', 'Directory.Build.props', 'Directory.Build.targets', 'Packages.props']
disabled = false

[container]
style = "bg:#212736"
symbol = ' ⬢ '
disabled = false
format = '[[$symbol \[$name\]](fg:#769ff0 bg:#212736)]($style)'

[terraform]
style = "bg:#212736"
symbol = " 󱁢 "
format = '[[via $symbol$workspace](fg:#769ff0 bg:#212736)]($style)'
disabled = false

[helm]
style = "bg:#212736"
symbol = " ⎈ "
format = '[[via $symbol](fg:#769ff0 bg:#212736)]($style)'
disabled = false

[custom.dockerfiles]
description = "Shows the docker symbol if the current directory has Dockerfile or docker-compose.yml files"
symbol = "  "
files = ["Dockerfile", "docker-compose.yml", "docker-compose.yaml"]
format = '[[via $symbol](fg:#769ff0 bg:#212736)]($style)'
style = "bg:#212736"

[custom.kubernetes]
description = "Shows the kubernetes symbol if the current directory has a k8s files"
detect_folders = ["k8s", "manifests"]
command = "kubernetes-files"
when =""" ls *.yaml """
ignore_timeout = true
shell = ["bash", "--noprofile", "--norc"]
format = '[[via $output ](fg:#769ff0 bg:#212736)]($style)'
style = "bg:#212736"

[custom.kubernetes_yml]
description = "Shows the kubernetes symbol if the current directory has a k8s files"
detect_folders = ["k8s", "manifests"]
command = "kubernetes-files"
when =""" ls *.yml """
shell = ["bash", "--noprofile", "--norc"]
format = '[[via $output ](fg:#769ff0 bg:#212736)]($style)'
style = "bg:#212736"

[custom.shellfiles]
description = "Shows the shell symbol if the current directory has shell files"
symbol = " 󱆃 "
when = """ test -e *.sh """
shell = "/bin/bash"
#format = " via [$symbol]($style)"
format = '[[via $symbol](fg:#769ff0 bg:#212736)]($style)'
style = "bg:#212736"

[custom.ansible]
description = "Shows the ansible symbol if the current directory has ansible files"
symbol = " 󱂚 "
when = """ test -n "${ANSIBLE_HOME}" """
files = ["ansible.cfg"]
shell = "/bin/bash"
format = '[[via $symbol](fg:#769ff0 bg:#212736)]($style)'
style = "bg:#212736"

[custom.giturl]
description = "Display symbol for remote Git server"
command = "check-git-remote"
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
shell = ["bash", "--noprofile", "--norc"]
format = "[[(at $output )](fg:#769ff0 bg:#394260)]($style)"
style = "bg:#394260"

[time]
disabled = true
time_format = "%R"
style = "bold blue"
format = '[$time]($style)'

[custom.live-clock-icon]
# workaround for linux, start with 12 o'clock icon instead of 1 o'clock
command =' h="";echo  ${h:$(date +%H)%12:1}'
description = "Live updating clock icon, changes hourly. Icons can be customized to your liking."
when = true
style = "bg:#1d2230"
format = "[$output ]($style)"

#Resource:
#https://github.com/starship/starship/discussions/1252
